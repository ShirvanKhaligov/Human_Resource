#pragma checksum "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "85170609194017363a153b75cec5a9ff68ab8f0a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Employee_Views_Payment_Attendance), @"mvc.1.0.view", @"/Areas/Employee/Views/Payment/Attendance.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Areas/Employee/Views/Payment/Attendance.cshtml", typeof(AspNetCore.Areas_Employee_Views_Payment_Attendance))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 2 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\_ViewImports.cshtml"
using InternalSystem.Areas.InternalHR.Models;

#line default
#line hidden
#line 3 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\_ViewImports.cshtml"
using InternalSystem.Areas.Employee.ViewModels;

#line default
#line hidden
#line 4 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\_ViewImports.cshtml"
using InternalSystem.Areas.InternalHR.Models.Departments;

#line default
#line hidden
#line 5 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\_ViewImports.cshtml"
using InternalSystem.Areas.Admin.Models;

#line default
#line hidden
#line 6 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\_ViewImports.cshtml"
using InternalSystem.Areas.InternalHR.Models.BusinessTrip;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"85170609194017363a153b75cec5a9ff68ab8f0a", @"/Areas/Employee/Views/Payment/Attendance.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"44a9ea914043a907ab4e2f42dfbedfd0f7d8f984", @"/Areas/Employee/Views/_ViewImports.cshtml")]
    public class Areas_Employee_Views_Payment_Attendance : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<AttendanceVM>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
  
    ViewData["Title"] = "Attendance";
    Layout = "~/Areas/Employee/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(129, 1230, true);
            WriteLiteral(@"

<style>

    th.rotate {
        height: 110px;
        white-space: nowrap;
        position: relative;
    }

        th.rotate > div {
            transform: translate(25px, 51px) rotate(90deg);
            position: absolute;
            width: 0px;
            top: -52px;
            left: -10px;
        }

            th.rotate > div > span {
                padding: 7px 7px;
            }

    th {
        color: blue;
        font-weight: 100;
        font-weight: bold;
    }

    .saturdey {
        background-color: yellow;
    }

    .sunday {
        background-color: green
    }

    .holiday {
        background-color: blue
    }

    .Mezuniyyet {
        background-color: darkmagenta
    }

    .table td {
        padding: 0;
    }

    .table-responsive {
        overflow-x: hidden;
    }
</style>


<!-- Content Wrapper. Contains page content -->


<div class=""content-wrapper"">

    <div class=""container-fluid "">
        <br>

  ");
            WriteLiteral("      <div class=\"row\">\r\n\r\n            <div class=\"card bg-gray-light\">\r\n                <div class=\"card-header\">\r\n                    <p style=\"text-align: center;font-size: 23px;color: green\">Tabel</p>\r\n");
            EndContext();
#line 73 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                      
                        var mydayofweek = DateTime.Now.DayOfWeek;
                    

#line default
#line hidden
            BeginContext(1473, 23, true);
            WriteLiteral("                    <p>");
            EndContext();
            BeginContext(1497, 11, false);
#line 76 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                  Write(mydayofweek);

#line default
#line hidden
            EndContext();
            BeginContext(1508, 628, true);
            WriteLiteral(@"</p>
                    <ul>
                        <li>ÖM - Ödənişsiz Məzuniyyət</li>
                        <li>M  - Əsas Məzuniyyət</li>
                        <li>E  - Ezamiyyə </li>
                        <li>D</li>
                        <li>E</li>
                    </ul>
                </div>

                <div class=""card-body"">

                    <table class=""table table-responsive  table-bordered "">
                        <thead>
                            <tr>
                                <th class=""rotate"">№</th>
                                <th class=""rotate"">ASA</th>
");
            EndContext();
            BeginContext(2228, 375, true);
            WriteLiteral(@"
                                <th class=""rotate""><div><span>Vəzifə</span></div></th>
                                <th class=""rotate""><div><span>İşləmə növü</span></div></th>
                                <th class=""rotate""><div><span>Işə qəbul</span></div></th>


                                <th class=""rotate""><div><span>Gün norma</span></div></th>



");
            EndContext();
#line 104 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                 foreach (var item in ViewBag.mydates)
                                {

#line default
#line hidden
            BeginContext(2710, 66, true);
            WriteLiteral("                                    <th class=\"rotate\"><div><span>");
            EndContext();
            BeginContext(2777, 4, false);
#line 106 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                                             Write(item);

#line default
#line hidden
            EndContext();
            BeginContext(2781, 20, true);
            WriteLiteral("</span></div></th>\r\n");
            EndContext();
#line 107 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                }

#line default
#line hidden
            BeginContext(2836, 88, true);
            WriteLiteral("                                <th class=\"rotate\"><div><span>Saat</span></div></th>\r\n\r\n");
            EndContext();
            BeginContext(3270, 104, true);
            WriteLiteral("\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n");
            EndContext();
#line 120 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                               int count = 1;

#line default
#line hidden
            BeginContext(3422, 28, true);
            WriteLiteral("                            ");
            EndContext();
#line 121 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                             if (Model.CommandsToEmployees.Count() != 0)
                            {
                                

#line default
#line hidden
#line 123 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                 foreach (var worker in Model.CommandsToEmployees)
                                {

                                    var vacation = Model.Vacations.Where(i => i.EmplooyeeId == worker.EmplooyeeId).ToList();
                                    var businesstrip = Model.BusinessTripEmps.Where(o => o.EmplooyeeId == worker.EmplooyeeId).ToList();
                                    var freevac = Model.FreeVacations.Where(t => t.EmplooyeeId == worker.EmplooyeeId).ToList();

#line default
#line hidden
            BeginContext(4040, 88, true);
            WriteLiteral("                                    <tr>\r\n\r\n                                        <td>");
            EndContext();
            BeginContext(4129, 5, false);
#line 131 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                       Write(count);

#line default
#line hidden
            EndContext();
            BeginContext(4134, 51, true);
            WriteLiteral("</td>\r\n                                        <td>");
            EndContext();
            BeginContext(4187, 92, false);
#line 132 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                        Write(worker.Emplooyee.FirstName+ " " +worker.Emplooyee.Lastname+ " " +worker.Emplooyee.FatherName);

#line default
#line hidden
            EndContext();
            BeginContext(4280, 1, true);
            WriteLiteral(" ");
            EndContext();
            BeginContext(4283, 47, false);
#line 132 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                                                                                                                        Write((worker.Emplooyee.GenderId==1) ? "oğlu": "qızı");

#line default
#line hidden
            EndContext();
            BeginContext(4331, 1, true);
            WriteLiteral(" ");
            EndContext();
            BeginContext(4334, 34, false);
#line 132 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                                                                                                                                                                           Write("Ş/V("+worker.Emplooyee.IdCard+")");

#line default
#line hidden
            EndContext();
            BeginContext(4369, 7, true);
            WriteLiteral("</td>\r\n");
            EndContext();
            BeginContext(4458, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 135 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                         if (worker.Emplooyee.Positions == null)
                                        {

#line default
#line hidden
            BeginContext(4585, 66, true);
            WriteLiteral("                                            <td>Şöbə Müdiri</td>\r\n");
            EndContext();
#line 138 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                        }
                                        else
                                        {

#line default
#line hidden
            BeginContext(4783, 48, true);
            WriteLiteral("                                            <td>");
            EndContext();
            BeginContext(4833, 31, false);
#line 141 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                            Write(worker.Emplooyee.Positions.Name);

#line default
#line hidden
            EndContext();
            BeginContext(4865, 7, true);
            WriteLiteral("</td>\r\n");
            EndContext();
#line 142 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"

                                        }

#line default
#line hidden
            BeginContext(4917, 48, true);
            WriteLiteral("\r\n\r\n                                        <td>");
            EndContext();
            BeginContext(4966, 36, false);
#line 146 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                       Write(worker.Emplooyee.WorkTimeOfType.Name);

#line default
#line hidden
            EndContext();
            BeginContext(5002, 7, true);
            WriteLiteral("</td>\r\n");
            EndContext();
            BeginContext(5280, 59, true);
            WriteLiteral("                                        <td class=\"rotate\">");
            EndContext();
            BeginContext(5340, 41, false);
#line 151 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                                      Write(worker.CreatedDate.ToString("dd/MM/yyyy"));

#line default
#line hidden
            EndContext();
            BeginContext(5381, 7, true);
            WriteLiteral("</td>\r\n");
            EndContext();
#line 152 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                         if (@worker.Emplooyee.WorkTimeOfTypeId == 1)
                                        {

#line default
#line hidden
            BeginContext(5518, 58, true);
            WriteLiteral("                                            <td>160</td>\r\n");
            EndContext();
#line 155 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                        }

#line default
#line hidden
            BeginContext(5619, 40, true);
            WriteLiteral("                                        ");
            EndContext();
#line 156 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                         if (@worker.Emplooyee.WorkTimeOfTypeId == 2)
                                        {

#line default
#line hidden
            BeginContext(5749, 57, true);
            WriteLiteral("                                            <td>80</td>\r\n");
            EndContext();
#line 159 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                        }

#line default
#line hidden
            BeginContext(5849, 40, true);
            WriteLiteral("                                        ");
            EndContext();
#line 160 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                         if (@worker.Emplooyee.WorkTimeOfTypeId == 3)
                                        {

#line default
#line hidden
            BeginContext(5979, 57, true);
            WriteLiteral("                                            <td>53</td>\r\n");
            EndContext();
#line 163 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                        }

                                        

#line default
#line hidden
            BeginContext(6169, 55, true);
            WriteLiteral("\r\n                                        <td>24</td>\r\n");
            EndContext();
#line 168 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                           double sumHour = 0;

#line default
#line hidden
            BeginContext(6289, 40, true);
            WriteLiteral("                                        ");
            EndContext();
#line 169 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                         foreach (var item in (List<string>)ViewBag.mydates)
                                        {
                                            var cdate = Convert.ToDateTime(item);

                                            if (vacation != null && businesstrip != null && freevac != null)
                                            {
                                                var exist = vacation.Where(i => i.FromDate <= cdate && i.ToDate >= cdate).Count();
                                                var exbus = businesstrip.Where(o => o.FromDate <= cdate && o.ToDate >= cdate).Count();
                                                var exfrvac = freevac.Where(t => t.FromDate <= cdate && t.ToDate >= cdate).Count();
                                                if (exfrvac > 0)
                                                {

#line default
#line hidden
            BeginContext(7186, 96, true);
            WriteLiteral("                                                    <td style=\"background-color:green\">ÖM</td>\r\n");
            EndContext();
#line 181 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"

                                                }
                                                else if (exbus > 0)
                                                {

#line default
#line hidden
            BeginContext(7455, 93, true);
            WriteLiteral("                                                    <td style=\"background-color:red\">E</td>\r\n");
            EndContext();
#line 186 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                                }
                                                else if(exist > 0)
                                                {

#line default
#line hidden
            BeginContext(7718, 97, true);
            WriteLiteral("                                                    <td style=\"background-color: yellow\">M</td>\r\n");
            EndContext();
#line 190 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                                }
                                                else
                                                {
                                                    if (worker.Emplooyee.WorkTimeOfTypeId == 1)
                                                    {
                                                        var date = new DateTime(0001, 01, 01);
                                                        var findcurrentday = cdate.DayOfWeek;

                                                        if (findcurrentday == DayOfWeek.Saturday)
                                                        {
                                                            sumHour += 5;

#line default
#line hidden
            BeginContext(8549, 72, true);
            WriteLiteral("                                                            <td>5</td>\r\n");
            EndContext();
#line 202 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                                        }
                                                        else
                                                        {
                                                            sumHour += 7;

#line default
#line hidden
            BeginContext(8876, 72, true);
            WriteLiteral("                                                            <td>7</td>\r\n");
            EndContext();
#line 207 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                                        }

                                                    }
                                                    if (worker.Emplooyee.WorkTimeOfTypeId == 2)
                                                    {
                                                        sumHour += 3.5;

#line default
#line hidden
            BeginContext(9289, 70, true);
            WriteLiteral("                                                        <td>3.5</td>\r\n");
            EndContext();
#line 214 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                                    }
                                                    if (worker.Emplooyee.WorkTimeOfTypeId == 3)
                                                    {
                                                        sumHour += 1.75;

#line default
#line hidden
            BeginContext(9640, 71, true);
            WriteLiteral("                                                        <td>1.75</td>\r\n");
            EndContext();
#line 219 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                if (worker.Emplooyee.WorkTimeOfTypeId == 1)
                                                {
                                                    var date = new DateTime(0001, 01, 01);
                                                    var findcurrentday = cdate.DayOfWeek;

                                                    if (findcurrentday == DayOfWeek.Saturday)
                                                    {
                                                        sumHour += 5;

#line default
#line hidden
            BeginContext(10511, 68, true);
            WriteLiteral("                                                        <td>5</td>\r\n");
            EndContext();
#line 233 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                                    }
                                                    else
                                                    {
                                                        sumHour += 7;

#line default
#line hidden
            BeginContext(10818, 68, true);
            WriteLiteral("                                                        <td>7</td>\r\n");
            EndContext();
#line 238 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                                    }

                                                }
                                                if (worker.Emplooyee.WorkTimeOfTypeId == 2)
                                                {
                                                    sumHour += 3.5;

#line default
#line hidden
            BeginContext(11207, 66, true);
            WriteLiteral("                                                    <td>3.5</td>\r\n");
            EndContext();
#line 245 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                                }
                                                if (worker.Emplooyee.WorkTimeOfTypeId == 3)
                                                {
                                                    sumHour += 1.75;

#line default
#line hidden
            BeginContext(11538, 67, true);
            WriteLiteral("                                                    <td>1.75</td>\r\n");
            EndContext();
#line 250 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                                }
                                            }




                                        }

#line default
#line hidden
            BeginContext(11754, 44, true);
            WriteLiteral("                                        <td>");
            EndContext();
            BeginContext(11799, 7, false);
#line 257 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                       Write(sumHour);

#line default
#line hidden
            EndContext();
            BeginContext(11806, 50, true);
            WriteLiteral("</td>\r\n                                    </tr>\r\n");
            EndContext();
#line 259 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                    count++;
                                }

#line default
#line hidden
#line 260 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                                 
                            }
                            else
                            {


#line default
#line hidden
            BeginContext(12035, 581, true);
            WriteLiteral(@"                                <tr>
                                    <th style=""width: 100px;"">Boş</th>
                                    <th style=""width: 110px;"">Boş</th>
                                    <th style=""width: 240px;"">Boş</th>
                                    <th style=""width: 110px;"">Boş</th>
                                    <th style=""width: 110px;"">Boş</th>
                                    <th style=""width: 110px;"">Boş</th>
                                    <th style=""width: 110px;"">Boş</th>
                                </tr>
");
            EndContext();
#line 274 "D:\Projects\HRS\TestHR\InternalSystem\InternalSystem\Areas\Employee\Views\Payment\Attendance.cshtml"
                            }

#line default
#line hidden
            BeginContext(12647, 364, true);
            WriteLiteral(@"

                        </tbody>
                    </table>

                </div>

            </div>


        </div>



        <!--content-wrapper-->
    </div>

    <!--Wrapper end-->
</div>


<!-- Control Sidebar -->
<aside class=""control-sidebar control-sidebar-dark"">
    <!-- Control sidebar content goes here -->
</aside>

");
            EndContext();
            DefineSection("scripts", async() => {
                BeginContext(13028, 2, true);
                WriteLiteral("\r\n");
                EndContext();
                BeginContext(13137, 2, true);
                WriteLiteral("\r\n");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<AttendanceVM> Html { get; private set; }
    }
}
#pragma warning restore 1591
